syntax = "proto3";

package v1;

option go_package = "echofs/proto/v1";

// Chunk storage operations
message StoreChunkRequest {
    string file_id = 1;
    string chunk_id = 2;
    int32 chunk_index = 3;
    bytes chunk_data = 4;
    string md5_hash = 5;
}

message StoreChunkResponse {
    bool success = 1;
    string message = 2;
    string worker_id = 3;
    string s3_key = 4;
}

message RetrieveChunkRequest {
    string file_id = 1;
    string chunk_id = 2;
    int32 chunk_index = 3;
}

message RetrieveChunkResponse {
    bool success = 1;
    bytes chunk_data = 2;
    string message = 3;
}

message DeleteChunkRequest {
    string file_id = 1;
    string chunk_id = 2;
    int32 chunk_index = 3;
}

message DeleteChunkResponse {
    bool success = 1;
    string message = 2;
    string worker_id = 3;
}

// Worker health and status
message HealthCheckRequest {
    string worker_id = 1;
}

message HealthCheckResponse {
    bool healthy = 1;
    string status = 2;
    int64 timestamp = 3;
}

message WorkerStatusRequest {
    string worker_id = 1;
}

message WorkerStatusResponse {
    string worker_id = 1;
    string address = 2;
    int32 port = 3;
    int64 available_space = 4;
    int32 current_load = 5;
    string status = 6;
    int64 last_heartbeat = 7;
}

// Worker registration with master
message RegisterWorkerRequest {
    string worker_id = 1;
    string address = 2;
    int32 grpc_port = 3;
    int64 available_space = 4;
}

message RegisterWorkerResponse {
    bool success = 1;
    string message = 2;
    string assigned_id = 3;
}

// Services
service WorkerService {
    rpc StoreChunk(StoreChunkRequest) returns (StoreChunkResponse);
    rpc RetrieveChunk(RetrieveChunkRequest) returns (RetrieveChunkResponse);
    rpc DeleteChunk(DeleteChunkRequest) returns (DeleteChunkResponse);
    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
    rpc GetStatus(WorkerStatusRequest) returns (WorkerStatusResponse);
}

service MasterService {
    rpc RegisterWorker(RegisterWorkerRequest) returns (RegisterWorkerResponse);
}