// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: proto/v1/echofs.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Chunk storage operations
type StoreChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	ChunkId       string                 `protobuf:"bytes,2,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	ChunkIndex    int32                  `protobuf:"varint,3,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	ChunkData     []byte                 `protobuf:"bytes,4,opt,name=chunk_data,json=chunkData,proto3" json:"chunk_data,omitempty"`
	Md5Hash       string                 `protobuf:"bytes,5,opt,name=md5_hash,json=md5Hash,proto3" json:"md5_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreChunkRequest) Reset() {
	*x = StoreChunkRequest{}
	mi := &file_proto_v1_echofs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreChunkRequest) ProtoMessage() {}

func (x *StoreChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreChunkRequest.ProtoReflect.Descriptor instead.
func (*StoreChunkRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{0}
}

func (x *StoreChunkRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *StoreChunkRequest) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *StoreChunkRequest) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *StoreChunkRequest) GetChunkData() []byte {
	if x != nil {
		return x.ChunkData
	}
	return nil
}

func (x *StoreChunkRequest) GetMd5Hash() string {
	if x != nil {
		return x.Md5Hash
	}
	return ""
}

type StoreChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	WorkerId      string                 `protobuf:"bytes,3,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	S3Key         string                 `protobuf:"bytes,4,opt,name=s3_key,json=s3Key,proto3" json:"s3_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreChunkResponse) Reset() {
	*x = StoreChunkResponse{}
	mi := &file_proto_v1_echofs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreChunkResponse) ProtoMessage() {}

func (x *StoreChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreChunkResponse.ProtoReflect.Descriptor instead.
func (*StoreChunkResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{1}
}

func (x *StoreChunkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StoreChunkResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StoreChunkResponse) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *StoreChunkResponse) GetS3Key() string {
	if x != nil {
		return x.S3Key
	}
	return ""
}

type RetrieveChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	ChunkId       string                 `protobuf:"bytes,2,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	ChunkIndex    int32                  `protobuf:"varint,3,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveChunkRequest) Reset() {
	*x = RetrieveChunkRequest{}
	mi := &file_proto_v1_echofs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveChunkRequest) ProtoMessage() {}

func (x *RetrieveChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveChunkRequest.ProtoReflect.Descriptor instead.
func (*RetrieveChunkRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{2}
}

func (x *RetrieveChunkRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *RetrieveChunkRequest) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *RetrieveChunkRequest) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

type RetrieveChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ChunkData     []byte                 `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3" json:"chunk_data,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveChunkResponse) Reset() {
	*x = RetrieveChunkResponse{}
	mi := &file_proto_v1_echofs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveChunkResponse) ProtoMessage() {}

func (x *RetrieveChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveChunkResponse.ProtoReflect.Descriptor instead.
func (*RetrieveChunkResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{3}
}

func (x *RetrieveChunkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RetrieveChunkResponse) GetChunkData() []byte {
	if x != nil {
		return x.ChunkData
	}
	return nil
}

func (x *RetrieveChunkResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	ChunkId       string                 `protobuf:"bytes,2,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	ChunkIndex    int32                  `protobuf:"varint,3,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChunkRequest) Reset() {
	*x = DeleteChunkRequest{}
	mi := &file_proto_v1_echofs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChunkRequest) ProtoMessage() {}

func (x *DeleteChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChunkRequest.ProtoReflect.Descriptor instead.
func (*DeleteChunkRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteChunkRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *DeleteChunkRequest) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *DeleteChunkRequest) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

type DeleteChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	WorkerId      string                 `protobuf:"bytes,3,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChunkResponse) Reset() {
	*x = DeleteChunkResponse{}
	mi := &file_proto_v1_echofs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChunkResponse) ProtoMessage() {}

func (x *DeleteChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChunkResponse.ProtoReflect.Descriptor instead.
func (*DeleteChunkResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteChunkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteChunkResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteChunkResponse) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

// Worker health and status
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_proto_v1_echofs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{6}
}

func (x *HealthCheckRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_proto_v1_echofs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{7}
}

func (x *HealthCheckResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type WorkerStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerStatusRequest) Reset() {
	*x = WorkerStatusRequest{}
	mi := &file_proto_v1_echofs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerStatusRequest) ProtoMessage() {}

func (x *WorkerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerStatusRequest.ProtoReflect.Descriptor instead.
func (*WorkerStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{8}
}

func (x *WorkerStatusRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

type WorkerStatusResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WorkerId       string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Address        string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Port           int32                  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	AvailableSpace int64                  `protobuf:"varint,4,opt,name=available_space,json=availableSpace,proto3" json:"available_space,omitempty"`
	CurrentLoad    int32                  `protobuf:"varint,5,opt,name=current_load,json=currentLoad,proto3" json:"current_load,omitempty"`
	Status         string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	LastHeartbeat  int64                  `protobuf:"varint,7,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"last_heartbeat,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorkerStatusResponse) Reset() {
	*x = WorkerStatusResponse{}
	mi := &file_proto_v1_echofs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerStatusResponse) ProtoMessage() {}

func (x *WorkerStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerStatusResponse.ProtoReflect.Descriptor instead.
func (*WorkerStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{9}
}

func (x *WorkerStatusResponse) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerStatusResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WorkerStatusResponse) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *WorkerStatusResponse) GetAvailableSpace() int64 {
	if x != nil {
		return x.AvailableSpace
	}
	return 0
}

func (x *WorkerStatusResponse) GetCurrentLoad() int32 {
	if x != nil {
		return x.CurrentLoad
	}
	return 0
}

func (x *WorkerStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WorkerStatusResponse) GetLastHeartbeat() int64 {
	if x != nil {
		return x.LastHeartbeat
	}
	return 0
}

// Worker registration with master
type RegisterWorkerRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WorkerId       string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Address        string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	GrpcPort       int32                  `protobuf:"varint,3,opt,name=grpc_port,json=grpcPort,proto3" json:"grpc_port,omitempty"`
	AvailableSpace int64                  `protobuf:"varint,4,opt,name=available_space,json=availableSpace,proto3" json:"available_space,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegisterWorkerRequest) Reset() {
	*x = RegisterWorkerRequest{}
	mi := &file_proto_v1_echofs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerRequest) ProtoMessage() {}

func (x *RegisterWorkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerRequest.ProtoReflect.Descriptor instead.
func (*RegisterWorkerRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterWorkerRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *RegisterWorkerRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RegisterWorkerRequest) GetGrpcPort() int32 {
	if x != nil {
		return x.GrpcPort
	}
	return 0
}

func (x *RegisterWorkerRequest) GetAvailableSpace() int64 {
	if x != nil {
		return x.AvailableSpace
	}
	return 0
}

type RegisterWorkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	AssignedId    string                 `protobuf:"bytes,3,opt,name=assigned_id,json=assignedId,proto3" json:"assigned_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerResponse) Reset() {
	*x = RegisterWorkerResponse{}
	mi := &file_proto_v1_echofs_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerResponse) ProtoMessage() {}

func (x *RegisterWorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerResponse.ProtoReflect.Descriptor instead.
func (*RegisterWorkerResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterWorkerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterWorkerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterWorkerResponse) GetAssignedId() string {
	if x != nil {
		return x.AssignedId
	}
	return ""
}

var File_proto_v1_echofs_proto protoreflect.FileDescriptor

const file_proto_v1_echofs_proto_rawDesc = "" +
	"\n" +
	"\x15proto/v1/echofs.proto\x12\x02v1\"\xa2\x01\n" +
	"\x11StoreChunkRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x19\n" +
	"\bchunk_id\x18\x02 \x01(\tR\achunkId\x12\x1f\n" +
	"\vchunk_index\x18\x03 \x01(\x05R\n" +
	"chunkIndex\x12\x1d\n" +
	"\n" +
	"chunk_data\x18\x04 \x01(\fR\tchunkData\x12\x19\n" +
	"\bmd5_hash\x18\x05 \x01(\tR\amd5Hash\"|\n" +
	"\x12StoreChunkResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1b\n" +
	"\tworker_id\x18\x03 \x01(\tR\bworkerId\x12\x15\n" +
	"\x06s3_key\x18\x04 \x01(\tR\x05s3Key\"k\n" +
	"\x14RetrieveChunkRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x19\n" +
	"\bchunk_id\x18\x02 \x01(\tR\achunkId\x12\x1f\n" +
	"\vchunk_index\x18\x03 \x01(\x05R\n" +
	"chunkIndex\"j\n" +
	"\x15RetrieveChunkResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"chunk_data\x18\x02 \x01(\fR\tchunkData\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"i\n" +
	"\x12DeleteChunkRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x19\n" +
	"\bchunk_id\x18\x02 \x01(\tR\achunkId\x12\x1f\n" +
	"\vchunk_index\x18\x03 \x01(\x05R\n" +
	"chunkIndex\"f\n" +
	"\x13DeleteChunkResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1b\n" +
	"\tworker_id\x18\x03 \x01(\tR\bworkerId\"1\n" +
	"\x12HealthCheckRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\"e\n" +
	"\x13HealthCheckResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"2\n" +
	"\x13WorkerStatusRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\"\xec\x01\n" +
	"\x14WorkerStatusResponse\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\x12'\n" +
	"\x0favailable_space\x18\x04 \x01(\x03R\x0eavailableSpace\x12!\n" +
	"\fcurrent_load\x18\x05 \x01(\x05R\vcurrentLoad\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12%\n" +
	"\x0elast_heartbeat\x18\a \x01(\x03R\rlastHeartbeat\"\x94\x01\n" +
	"\x15RegisterWorkerRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1b\n" +
	"\tgrpc_port\x18\x03 \x01(\x05R\bgrpcPort\x12'\n" +
	"\x0favailable_space\x18\x04 \x01(\x03R\x0eavailableSpace\"m\n" +
	"\x16RegisterWorkerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vassigned_id\x18\x03 \x01(\tR\n" +
	"assignedId2\xd2\x02\n" +
	"\rWorkerService\x12;\n" +
	"\n" +
	"StoreChunk\x12\x15.v1.StoreChunkRequest\x1a\x16.v1.StoreChunkResponse\x12D\n" +
	"\rRetrieveChunk\x12\x18.v1.RetrieveChunkRequest\x1a\x19.v1.RetrieveChunkResponse\x12>\n" +
	"\vDeleteChunk\x12\x16.v1.DeleteChunkRequest\x1a\x17.v1.DeleteChunkResponse\x12>\n" +
	"\vHealthCheck\x12\x16.v1.HealthCheckRequest\x1a\x17.v1.HealthCheckResponse\x12>\n" +
	"\tGetStatus\x12\x17.v1.WorkerStatusRequest\x1a\x18.v1.WorkerStatusResponse2X\n" +
	"\rMasterService\x12G\n" +
	"\x0eRegisterWorker\x12\x19.v1.RegisterWorkerRequest\x1a\x1a.v1.RegisterWorkerResponseB\x11Z\x0fechofs/proto/v1b\x06proto3"

var (
	file_proto_v1_echofs_proto_rawDescOnce sync.Once
	file_proto_v1_echofs_proto_rawDescData []byte
)

func file_proto_v1_echofs_proto_rawDescGZIP() []byte {
	file_proto_v1_echofs_proto_rawDescOnce.Do(func() {
		file_proto_v1_echofs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_v1_echofs_proto_rawDesc), len(file_proto_v1_echofs_proto_rawDesc)))
	})
	return file_proto_v1_echofs_proto_rawDescData
}

var file_proto_v1_echofs_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_v1_echofs_proto_goTypes = []any{
	(*StoreChunkRequest)(nil),      // 0: v1.StoreChunkRequest
	(*StoreChunkResponse)(nil),     // 1: v1.StoreChunkResponse
	(*RetrieveChunkRequest)(nil),   // 2: v1.RetrieveChunkRequest
	(*RetrieveChunkResponse)(nil),  // 3: v1.RetrieveChunkResponse
	(*DeleteChunkRequest)(nil),     // 4: v1.DeleteChunkRequest
	(*DeleteChunkResponse)(nil),    // 5: v1.DeleteChunkResponse
	(*HealthCheckRequest)(nil),     // 6: v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),    // 7: v1.HealthCheckResponse
	(*WorkerStatusRequest)(nil),    // 8: v1.WorkerStatusRequest
	(*WorkerStatusResponse)(nil),   // 9: v1.WorkerStatusResponse
	(*RegisterWorkerRequest)(nil),  // 10: v1.RegisterWorkerRequest
	(*RegisterWorkerResponse)(nil), // 11: v1.RegisterWorkerResponse
}
var file_proto_v1_echofs_proto_depIdxs = []int32{
	0,  // 0: v1.WorkerService.StoreChunk:input_type -> v1.StoreChunkRequest
	2,  // 1: v1.WorkerService.RetrieveChunk:input_type -> v1.RetrieveChunkRequest
	4,  // 2: v1.WorkerService.DeleteChunk:input_type -> v1.DeleteChunkRequest
	6,  // 3: v1.WorkerService.HealthCheck:input_type -> v1.HealthCheckRequest
	8,  // 4: v1.WorkerService.GetStatus:input_type -> v1.WorkerStatusRequest
	10, // 5: v1.MasterService.RegisterWorker:input_type -> v1.RegisterWorkerRequest
	1,  // 6: v1.WorkerService.StoreChunk:output_type -> v1.StoreChunkResponse
	3,  // 7: v1.WorkerService.RetrieveChunk:output_type -> v1.RetrieveChunkResponse
	5,  // 8: v1.WorkerService.DeleteChunk:output_type -> v1.DeleteChunkResponse
	7,  // 9: v1.WorkerService.HealthCheck:output_type -> v1.HealthCheckResponse
	9,  // 10: v1.WorkerService.GetStatus:output_type -> v1.WorkerStatusResponse
	11, // 11: v1.MasterService.RegisterWorker:output_type -> v1.RegisterWorkerResponse
	6,  // [6:12] is the sub-list for method output_type
	0,  // [0:6] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_proto_v1_echofs_proto_init() }
func file_proto_v1_echofs_proto_init() {
	if File_proto_v1_echofs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_v1_echofs_proto_rawDesc), len(file_proto_v1_echofs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_v1_echofs_proto_goTypes,
		DependencyIndexes: file_proto_v1_echofs_proto_depIdxs,
		MessageInfos:      file_proto_v1_echofs_proto_msgTypes,
	}.Build()
	File_proto_v1_echofs_proto = out.File
	file_proto_v1_echofs_proto_goTypes = nil
	file_proto_v1_echofs_proto_depIdxs = nil
}
