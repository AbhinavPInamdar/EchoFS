// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: proto/v1/echofs.proto

///ran protoc command to bind the contracts defined in .proto
package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	FileSize      int64                  `protobuf:"varint,2,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	OwnerId       string                 `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Chunks        []*ChunkInfo           `protobuf:"bytes,5,rep,name=chunks,proto3" json:"chunks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	mi := &file_proto_v1_echofs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{0}
}

func (x *FileMetadata) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileMetadata) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileMetadata) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *FileMetadata) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FileMetadata) GetChunks() []*ChunkInfo {
	if x != nil {
		return x.Chunks
	}
	return nil
}

type ChunkInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       string                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	ChunkSize     int64                  `protobuf:"varint,2,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	WorkerAddrs   []string               `protobuf:"bytes,3,rep,name=worker_addrs,json=workerAddrs,proto3" json:"worker_addrs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkInfo) Reset() {
	*x = ChunkInfo{}
	mi := &file_proto_v1_echofs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkInfo) ProtoMessage() {}

func (x *ChunkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkInfo.ProtoReflect.Descriptor instead.
func (*ChunkInfo) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{1}
}

func (x *ChunkInfo) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *ChunkInfo) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *ChunkInfo) GetWorkerAddrs() []string {
	if x != nil {
		return x.WorkerAddrs
	}
	return nil
}

type WorkerStatus struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WorkerId       string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Address        string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	AvailableSpace int64                  `protobuf:"varint,3,opt,name=available_space,json=availableSpace,proto3" json:"available_space,omitempty"`
	CurrentLoad    int32                  `protobuf:"varint,4,opt,name=current_load,json=currentLoad,proto3" json:"current_load,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorkerStatus) Reset() {
	*x = WorkerStatus{}
	mi := &file_proto_v1_echofs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerStatus) ProtoMessage() {}

func (x *WorkerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerStatus.ProtoReflect.Descriptor instead.
func (*WorkerStatus) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{2}
}

func (x *WorkerStatus) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerStatus) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WorkerStatus) GetAvailableSpace() int64 {
	if x != nil {
		return x.AvailableSpace
	}
	return 0
}

func (x *WorkerStatus) GetCurrentLoad() int32 {
	if x != nil {
		return x.CurrentLoad
	}
	return 0
}

type ChunkAllocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       string                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	ChunkSize     int64                  `protobuf:"varint,2,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	WorkerAddrs   []string               `protobuf:"bytes,3,rep,name=worker_addrs,json=workerAddrs,proto3" json:"worker_addrs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkAllocation) Reset() {
	*x = ChunkAllocation{}
	mi := &file_proto_v1_echofs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkAllocation) ProtoMessage() {}

func (x *ChunkAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkAllocation.ProtoReflect.Descriptor instead.
func (*ChunkAllocation) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{3}
}

func (x *ChunkAllocation) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *ChunkAllocation) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *ChunkAllocation) GetWorkerAddrs() []string {
	if x != nil {
		return x.WorkerAddrs
	}
	return nil
}

type UploadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	FileSize      int64                  `protobuf:"varint,2,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	OwnerId       string                 `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	mi := &file_proto_v1_echofs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{4}
}

func (x *UploadFileRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *UploadFileRequest) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *UploadFileRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type UploadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Allocations   []*ChunkAllocation     `protobuf:"bytes,2,rep,name=allocations,proto3" json:"allocations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileResponse) Reset() {
	*x = UploadFileResponse{}
	mi := &file_proto_v1_echofs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResponse) ProtoMessage() {}

func (x *UploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResponse.ProtoReflect.Descriptor instead.
func (*UploadFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{5}
}

func (x *UploadFileResponse) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *UploadFileResponse) GetAllocations() []*ChunkAllocation {
	if x != nil {
		return x.Allocations
	}
	return nil
}

type DownloadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	OwnerId       string                 `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadFileRequest) Reset() {
	*x = DownloadFileRequest{}
	mi := &file_proto_v1_echofs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRequest) ProtoMessage() {}

func (x *DownloadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRequest.ProtoReflect.Descriptor instead.
func (*DownloadFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{6}
}

func (x *DownloadFileRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *DownloadFileRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type DownloadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *FileMetadata          `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadFileResponse) Reset() {
	*x = DownloadFileResponse{}
	mi := &file_proto_v1_echofs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileResponse) ProtoMessage() {}

func (x *DownloadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileResponse.ProtoReflect.Descriptor instead.
func (*DownloadFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{7}
}

func (x *DownloadFileResponse) GetMetadata() *FileMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type RegisterWorkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerResponse) Reset() {
	*x = RegisterWorkerResponse{}
	mi := &file_proto_v1_echofs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerResponse) ProtoMessage() {}

func (x *RegisterWorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerResponse.ProtoReflect.Descriptor instead.
func (*RegisterWorkerResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterWorkerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterWorkerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StoreChunkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*StoreChunkRequest_Metadata
	//	*StoreChunkRequest_Content
	Payload       isStoreChunkRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreChunkRequest) Reset() {
	*x = StoreChunkRequest{}
	mi := &file_proto_v1_echofs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreChunkRequest) ProtoMessage() {}

func (x *StoreChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreChunkRequest.ProtoReflect.Descriptor instead.
func (*StoreChunkRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{9}
}

func (x *StoreChunkRequest) GetPayload() isStoreChunkRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *StoreChunkRequest) GetMetadata() *ChunkMetadata {
	if x != nil {
		if x, ok := x.Payload.(*StoreChunkRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *StoreChunkRequest) GetContent() []byte {
	if x != nil {
		if x, ok := x.Payload.(*StoreChunkRequest_Content); ok {
			return x.Content
		}
	}
	return nil
}

type isStoreChunkRequest_Payload interface {
	isStoreChunkRequest_Payload()
}

type StoreChunkRequest_Metadata struct {
	Metadata *ChunkMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type StoreChunkRequest_Content struct {
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3,oneof"`
}

func (*StoreChunkRequest_Metadata) isStoreChunkRequest_Payload() {}

func (*StoreChunkRequest_Content) isStoreChunkRequest_Payload() {}

type ChunkMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       string                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	ChunkSize     int64                  `protobuf:"varint,2,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkMetadata) Reset() {
	*x = ChunkMetadata{}
	mi := &file_proto_v1_echofs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkMetadata) ProtoMessage() {}

func (x *ChunkMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkMetadata.ProtoReflect.Descriptor instead.
func (*ChunkMetadata) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{10}
}

func (x *ChunkMetadata) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *ChunkMetadata) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

type StoreChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       string                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	WorkerId      string                 `protobuf:"bytes,3,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreChunkResponse) Reset() {
	*x = StoreChunkResponse{}
	mi := &file_proto_v1_echofs_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreChunkResponse) ProtoMessage() {}

func (x *StoreChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreChunkResponse.ProtoReflect.Descriptor instead.
func (*StoreChunkResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{11}
}

func (x *StoreChunkResponse) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *StoreChunkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StoreChunkResponse) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

type RetrieveChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       string                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveChunkRequest) Reset() {
	*x = RetrieveChunkRequest{}
	mi := &file_proto_v1_echofs_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveChunkRequest) ProtoMessage() {}

func (x *RetrieveChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveChunkRequest.ProtoReflect.Descriptor instead.
func (*RetrieveChunkRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{12}
}

func (x *RetrieveChunkRequest) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

type RetrieveChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveChunkResponse) Reset() {
	*x = RetrieveChunkResponse{}
	mi := &file_proto_v1_echofs_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveChunkResponse) ProtoMessage() {}

func (x *RetrieveChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_echofs_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveChunkResponse.ProtoReflect.Descriptor instead.
func (*RetrieveChunkResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_echofs_proto_rawDescGZIP(), []int{13}
}

func (x *RetrieveChunkResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_proto_v1_echofs_proto protoreflect.FileDescriptor

const file_proto_v1_echofs_proto_rawDesc = "" +
	"\n" +
	"\x15proto/v1/echofs.proto\x12\x02v1\"\xa9\x01\n" +
	"\fFileMetadata\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\x12\x1b\n" +
	"\tfile_size\x18\x02 \x01(\x03R\bfileSize\x12\x19\n" +
	"\bowner_id\x18\x03 \x01(\tR\aownerId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12%\n" +
	"\x06chunks\x18\x05 \x03(\v2\r.v1.ChunkInfoR\x06chunks\"h\n" +
	"\tChunkInfo\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\tR\achunkId\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x02 \x01(\x03R\tchunkSize\x12!\n" +
	"\fworker_addrs\x18\x03 \x03(\tR\vworkerAddrs\"\x91\x01\n" +
	"\fWorkerStatus\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12'\n" +
	"\x0favailable_space\x18\x03 \x01(\x03R\x0eavailableSpace\x12!\n" +
	"\fcurrent_load\x18\x04 \x01(\x05R\vcurrentLoad\"n\n" +
	"\x0fChunkAllocation\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\tR\achunkId\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x02 \x01(\x03R\tchunkSize\x12!\n" +
	"\fworker_addrs\x18\x03 \x03(\tR\vworkerAddrs\"h\n" +
	"\x11UploadFileRequest\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\x12\x1b\n" +
	"\tfile_size\x18\x02 \x01(\x03R\bfileSize\x12\x19\n" +
	"\bowner_id\x18\x03 \x01(\tR\aownerId\"h\n" +
	"\x12UploadFileResponse\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\x125\n" +
	"\vallocations\x18\x02 \x03(\v2\x13.v1.ChunkAllocationR\vallocations\"M\n" +
	"\x13DownloadFileRequest\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\x12\x19\n" +
	"\bowner_id\x18\x02 \x01(\tR\aownerId\"D\n" +
	"\x14DownloadFileResponse\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.v1.FileMetadataR\bmetadata\"L\n" +
	"\x16RegisterWorkerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"k\n" +
	"\x11StoreChunkRequest\x12/\n" +
	"\bmetadata\x18\x01 \x01(\v2\x11.v1.ChunkMetadataH\x00R\bmetadata\x12\x1a\n" +
	"\acontent\x18\x02 \x01(\fH\x00R\acontentB\t\n" +
	"\apayload\"I\n" +
	"\rChunkMetadata\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\tR\achunkId\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x02 \x01(\x03R\tchunkSize\"f\n" +
	"\x12StoreChunkResponse\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\tR\achunkId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x1b\n" +
	"\tworker_id\x18\x03 \x01(\tR\bworkerId\"1\n" +
	"\x14RetrieveChunkRequest\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\tR\achunkId\"1\n" +
	"\x15RetrieveChunkResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent2\xcf\x01\n" +
	"\rMasterService\x12;\n" +
	"\n" +
	"UploadFile\x12\x15.v1.UploadFileRequest\x1a\x16.v1.UploadFileResponse\x12A\n" +
	"\fDownloadFile\x12\x17.v1.DownloadFileRequest\x1a\x18.v1.DownloadFileResponse\x12>\n" +
	"\x0eRegisterWorker\x12\x10.v1.WorkerStatus\x1a\x1a.v1.RegisterWorkerResponse2\x96\x01\n" +
	"\rWorkerService\x12=\n" +
	"\n" +
	"StoreChunk\x12\x15.v1.StoreChunkRequest\x1a\x16.v1.StoreChunkResponse(\x01\x12F\n" +
	"\rRetrieveChunk\x12\x18.v1.RetrieveChunkRequest\x1a\x19.v1.RetrieveChunkResponse0\x01B\x19Z\x17echofs/Backend/proto/v1b\x06proto3"

var (
	file_proto_v1_echofs_proto_rawDescOnce sync.Once
	file_proto_v1_echofs_proto_rawDescData []byte
)

func file_proto_v1_echofs_proto_rawDescGZIP() []byte {
	file_proto_v1_echofs_proto_rawDescOnce.Do(func() {
		file_proto_v1_echofs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_v1_echofs_proto_rawDesc), len(file_proto_v1_echofs_proto_rawDesc)))
	})
	return file_proto_v1_echofs_proto_rawDescData
}

var file_proto_v1_echofs_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_v1_echofs_proto_goTypes = []any{
	(*FileMetadata)(nil),           // 0: v1.FileMetadata
	(*ChunkInfo)(nil),              // 1: v1.ChunkInfo
	(*WorkerStatus)(nil),           // 2: v1.WorkerStatus
	(*ChunkAllocation)(nil),        // 3: v1.ChunkAllocation
	(*UploadFileRequest)(nil),      // 4: v1.UploadFileRequest
	(*UploadFileResponse)(nil),     // 5: v1.UploadFileResponse
	(*DownloadFileRequest)(nil),    // 6: v1.DownloadFileRequest
	(*DownloadFileResponse)(nil),   // 7: v1.DownloadFileResponse
	(*RegisterWorkerResponse)(nil), // 8: v1.RegisterWorkerResponse
	(*StoreChunkRequest)(nil),      // 9: v1.StoreChunkRequest
	(*ChunkMetadata)(nil),          // 10: v1.ChunkMetadata
	(*StoreChunkResponse)(nil),     // 11: v1.StoreChunkResponse
	(*RetrieveChunkRequest)(nil),   // 12: v1.RetrieveChunkRequest
	(*RetrieveChunkResponse)(nil),  // 13: v1.RetrieveChunkResponse
}
var file_proto_v1_echofs_proto_depIdxs = []int32{
	1,  // 0: v1.FileMetadata.chunks:type_name -> v1.ChunkInfo
	3,  // 1: v1.UploadFileResponse.allocations:type_name -> v1.ChunkAllocation
	0,  // 2: v1.DownloadFileResponse.metadata:type_name -> v1.FileMetadata
	10, // 3: v1.StoreChunkRequest.metadata:type_name -> v1.ChunkMetadata
	4,  // 4: v1.MasterService.UploadFile:input_type -> v1.UploadFileRequest
	6,  // 5: v1.MasterService.DownloadFile:input_type -> v1.DownloadFileRequest
	2,  // 6: v1.MasterService.RegisterWorker:input_type -> v1.WorkerStatus
	9,  // 7: v1.WorkerService.StoreChunk:input_type -> v1.StoreChunkRequest
	12, // 8: v1.WorkerService.RetrieveChunk:input_type -> v1.RetrieveChunkRequest
	5,  // 9: v1.MasterService.UploadFile:output_type -> v1.UploadFileResponse
	7,  // 10: v1.MasterService.DownloadFile:output_type -> v1.DownloadFileResponse
	8,  // 11: v1.MasterService.RegisterWorker:output_type -> v1.RegisterWorkerResponse
	11, // 12: v1.WorkerService.StoreChunk:output_type -> v1.StoreChunkResponse
	13, // 13: v1.WorkerService.RetrieveChunk:output_type -> v1.RetrieveChunkResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_v1_echofs_proto_init() }
func file_proto_v1_echofs_proto_init() {
	if File_proto_v1_echofs_proto != nil {
		return
	}
	file_proto_v1_echofs_proto_msgTypes[9].OneofWrappers = []any{
		(*StoreChunkRequest_Metadata)(nil),
		(*StoreChunkRequest_Content)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_v1_echofs_proto_rawDesc), len(file_proto_v1_echofs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_v1_echofs_proto_goTypes,
		DependencyIndexes: file_proto_v1_echofs_proto_depIdxs,
		MessageInfos:      file_proto_v1_echofs_proto_msgTypes,
	}.Build()
	File_proto_v1_echofs_proto = out.File
	file_proto_v1_echofs_proto_goTypes = nil
	file_proto_v1_echofs_proto_depIdxs = nil
}
