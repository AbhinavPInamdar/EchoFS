syntax = "proto3";

package v1;

option go_package = "echofs/Backend/proto/v1";

message FileMetadata {
    string file_path = 1;
    int64 file_size = 2;
    string owner_id = 3;
    int64 created_at = 4;
    repeated ChunkInfo chunks = 5;
}

message ChunkInfo {
    string chunk_id = 1;
    int64 chunk_size = 2;
    repeated string worker_addrs = 3;
}

message WorkerStatus {
    string worker_id = 1;
    string address = 2;
    int64 available_space = 3;
    int32 current_load = 4;
}

message ChunkAllocation {
    string chunk_id = 1;
    int64 chunk_size = 2;
    repeated string worker_addrs = 3;
}

message UploadFileRequest {
    string file_path = 1;
    int64 file_size = 2;
    string owner_id = 3;
}

message UploadFileResponse {
    string file_path = 1;
    repeated ChunkAllocation allocations = 2;
}

message DownloadFileRequest {
    string file_path = 1;
    string owner_id = 2;
}

message DownloadFileResponse {
    FileMetadata metadata = 1;
}

message RegisterWorkerResponse {
    bool success = 1;
    string message = 2;
}

message StoreChunkRequest {
    oneof payload {
        ChunkMetadata metadata = 1;
        bytes content = 2;
    }
}

message ChunkMetadata {
    string chunk_id = 1;
    int64 chunk_size = 2;
}

message StoreChunkResponse {
    string chunk_id = 1;
    bool success = 2;
    string worker_id = 3;
}

message RetrieveChunkRequest {
    string chunk_id = 1;
}

message RetrieveChunkResponse {
    bytes content = 1;
}

service MasterService {
    rpc UploadFile (UploadFileRequest) returns (UploadFileResponse);
    rpc DownloadFile (DownloadFileRequest) returns (DownloadFileResponse);
    rpc RegisterWorker (WorkerStatus) returns (RegisterWorkerResponse);
}

service WorkerService {
    rpc StoreChunk (stream StoreChunkRequest) returns (StoreChunkResponse);
    rpc RetrieveChunk (RetrieveChunkRequest) returns (stream RetrieveChunkResponse);
Ì¦